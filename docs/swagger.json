{
    "swagger": "2.0",
    "info": {
        "description": "This is auth REST api server",
        "title": "auth",
        "termsOfService": "tbd",
        "contact": {
            "name": "Rezoan Tamal",
            "email": "my.full.name.in.lower.case@gmail.com"
        },
        "version": "1.0"
    },
    "host": "https://auth-iamrz1.cloud.okteto.net",
    "basePath": "/",
    "paths": {
        "/api/v1/private/customers/address": {
            "post": {
                "description": "Add a customer address as long as the total address count for the customer is not greater than 5",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Add a customer address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Some fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddressCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressListSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/address/all": {
            "get": {
                "description": "Get all the addresses of the requesting customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get customer's addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressListSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/address/primary": {
            "get": {
                "description": "Get the primary address of the requesting customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get primary address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "417": {
                        "description": "User is yet to set a primary address",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/address/primary/{id}": {
            "post": {
                "description": "Set an address using address id as the primary address for customer, remove the previous primary address if needed",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Set a primary address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressListSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/address/{id}": {
            "delete": {
                "description": "Remove an address for customer using address id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Remove a customer address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressListSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an address for customer using address id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update address by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Some fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddressUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.AddressListSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/password": {
            "put": {
                "description": "Update to a new password using customer's existing password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update existing password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Some fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdatePasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CustomerSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/profile": {
            "get": {
                "description": "Returns customer's profile using access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Get basic profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CustomerSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request body, or missing required fields.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access attempt.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "API sever or db unreachable.",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update customer's basic profile info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Update basic profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Set access token here",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Some fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CustomerProfileUpdateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CustomerSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/refresh-token": {
            "get": {
                "description": "Generate new access and refresh tokens using current refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Refresh customer's access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Value of refresh token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenSuccessRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/private/customers/verify-token": {
            "get": {
                "description": "verifyAccessToken lets apps to verify that a provided token is in-fact valid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Verify customer's access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Value of access token",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmptySuccessRes"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/bd-area": {
            "get": {
                "description": "Get a list of BD areas under selected parent (slug value). No parent returns list of divisions. Division as parent will return districts and so on)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Common"
                ],
                "summary": "Fetch BD area presets (division, district, sub-district)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Default value: empty-string",
                        "name": "parent",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Default value: 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Default value: 10",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BDLocationListSuccessRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyListErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/customers/forgot-password": {
            "post": {
                "description": "Use username and captcha to send otp to customer's registered number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Request OTP to reset password",
                "parameters": [
                    {
                        "description": "All fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ForgotPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.EmptySuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/customers/login": {
            "post": {
                "description": "Login uses customer defined username and password to authenticate a customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Login as a customer",
                "parameters": [
                    {
                        "description": "All fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.TokenSuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/customers/set-password": {
            "post": {
                "description": "Set new password using OTP received during forgot-password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Set customer's password with OTP",
                "parameters": [
                    {
                        "description": "All fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SetPasswordReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmptySuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/customers/signup": {
            "post": {
                "description": "Signup a new customer for a valid non-existing phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Signup a new customer",
                "parameters": [
                    {
                        "description": "All fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CustomerSignupReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.EmptySuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        },
        "/api/v1/public/customers/verify-signup": {
            "post": {
                "description": "Use customer defined otp to match it with existing reference in cache to verify a signup",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customers"
                ],
                "summary": "Verify a new customer using otp",
                "parameters": [
                    {
                        "description": "All fields are mandatory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CustomerSignupVerificationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.EmptySuccessRes"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.EmptyErrorRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "district_slug": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "division_slug": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phone_number": {
                    "type": "string"
                },
                "sub_district": {
                    "type": "string"
                },
                "sub_district_slug": {
                    "type": "string"
                },
                "union": {
                    "type": "string"
                },
                "union_slug": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.AddressCreateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "district_slug": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "division_slug": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "is_primary": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phone_number": {
                    "type": "string"
                },
                "sub_district": {
                    "type": "string"
                },
                "sub_district_slug": {
                    "type": "string"
                },
                "union": {
                    "type": "string"
                },
                "union_slug": {
                    "type": "string"
                }
            }
        },
        "model.AddressUpdateReq": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "district_slug": {
                    "type": "string"
                },
                "division": {
                    "type": "string"
                },
                "division_slug": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "phone_number": {
                    "type": "string"
                },
                "sub_district": {
                    "type": "string"
                },
                "sub_district_slug": {
                    "type": "string"
                },
                "union": {
                    "type": "string"
                },
                "union_slug": {
                    "type": "string"
                }
            }
        },
        "model.BDLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "name_bn": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "occupation": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "profile_pic_url": {
                    "type": "string"
                },
                "recovery_phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.CustomerProfileUpdateReq": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "example": "male/female/other"
                },
                "occupation": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "profile_pic_url": {
                    "type": "string"
                }
            }
        },
        "model.CustomerSignupReq": {
            "type": "object",
            "properties": {
                "captcha_id": {
                    "type": "string"
                },
                "captcha_value": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.CustomerSignupVerificationReq": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.EmptyObject": {
            "type": "object"
        },
        "model.ForgotPasswordReq": {
            "type": "object",
            "properties": {
                "captcha_id": {
                    "type": "string"
                },
                "captcha_value": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.LoginReq": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.SetPasswordReq": {
            "type": "object",
            "properties": {
                "otp": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "model.UpdatePasswordReq": {
            "type": "object",
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "response.AddressListSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Address"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "meta": {
                    "$ref": "#/definitions/response.ListMeta"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.AddressSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Address"
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.BDLocationListSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BDLocation"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "meta": {
                    "$ref": "#/definitions/response.ListMeta"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.CustomerSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Customer"
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.EmptyErrorRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.EmptyObject"
                },
                "message": {
                    "type": "string",
                    "example": "failure message"
                },
                "status": {
                    "type": "string",
                    "example": "Status string corresponding to the error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.EmptyListErrorRes": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.EmptyObject"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "failure message"
                },
                "status": {
                    "type": "string",
                    "example": "Status string corresponding to the error"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.EmptySuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.EmptyObject"
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        },
        "response.ListMeta": {
            "type": "object",
            "properties": {
                "Limit": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                }
            }
        },
        "response.TokenSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Token"
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "status": {
                    "type": "string",
                    "example": "OK"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                },
                "timestamp": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05.000Z"
                }
            }
        }
    }
}