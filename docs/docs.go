// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "tbd",
        "contact": {
            "name": "Rezoan Tamal",
            "email": "my.full.name.in.lower.case@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {},
    "definitions": {
        "model.Customer": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "is_deleted": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "recovery_phone_number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.CustomerSignupReq": {
            "type": "object",
            "properties": {
                "captcha_id": {
                    "type": "string"
                },
                "captcha_value": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.EmptyObject": {
            "type": "object"
        },
        "response.CustomerData": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/model.Customer"
                }
            }
        },
        "response.CustomerErrData": {
            "type": "object",
            "properties": {
                "object": {
                    "$ref": "#/definitions/model.EmptyObject"
                }
            }
        },
        "response.CustomerErrorRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CustomerErrData"
                },
                "message": {
                    "type": "string",
                    "example": "failure message"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "response.CustomerSuccessRes": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.CustomerData"
                },
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "auth",
	Description: "This is auth REST api server",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
