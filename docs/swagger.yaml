basePath: /
definitions:
  model.Customer:
    properties:
      birth_date:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      is_deleted:
        type: boolean
      is_verified:
        type: boolean
      occupation:
        type: string
      organization:
        type: string
      recovery_phone_number:
        type: string
      status:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  model.CustomerProfileUpdateReq:
    properties:
      birth_date:
        example: "2006-01-02T15:04:05.000Z"
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        example: male/female/other
        type: string
      occupation:
        type: string
      organization:
        type: string
    type: object
  model.CustomerSignupReq:
    properties:
      captcha_id:
        type: string
      captcha_value:
        type: string
      full_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.CustomerSignupVerificationReq:
    properties:
      otp:
        type: string
      username:
        type: string
    type: object
  model.EmptyObject:
    type: object
  model.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  response.CustomerErrorRes:
    properties:
      data:
        $ref: '#/definitions/model.EmptyObject'
      message:
        example: failure message
        type: string
      status:
        example: Status string corresponding to the error
        type: string
      success:
        example: false
        type: boolean
      timestamp:
        example: "2006-01-02T15:04:05.000Z"
        type: string
    type: object
  response.CustomerSuccessRes:
    properties:
      data:
        $ref: '#/definitions/model.Customer'
      message:
        example: success message
        type: string
      status:
        example: OK
        type: string
      success:
        example: true
        type: boolean
      timestamp:
        example: "2006-01-02T15:04:05.000Z"
        type: string
    type: object
  response.EmptySuccessRes:
    properties:
      data:
        $ref: '#/definitions/model.EmptyObject'
      message:
        example: success message
        type: string
      status:
        example: OK
        type: string
      success:
        example: false
        type: boolean
      timestamp:
        example: "2006-01-02T15:04:05.000Z"
        type: string
    type: object
  response.TokenSuccessRes:
    properties:
      data:
        $ref: '#/definitions/model.Token'
      message:
        example: success message
        type: string
      status:
        example: OK
        type: string
      success:
        example: false
        type: boolean
      timestamp:
        example: "2006-01-02T15:04:05.000Z"
        type: string
    type: object
host: https://auth-iamrz1.cloud.okteto.net
info:
  contact:
    email: my.full.name.in.lower.case@gmail.com
    name: Rezoan Tamal
  description: This is auth REST api server
  termsOfService: tbd
  title: auth
  version: "1.0"
paths:
  /api/v1/private/customers/profile:
    get:
      description: Returns user's profile using access token
      parameters:
      - description: Set access token here
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CustomerSuccessRes'
        "400":
          description: Invalid request body, or missing required fields.
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "401":
          description: Unauthorized access attempt.
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "500":
          description: API sever or db unreachable.
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Get basic profile
      tags:
      - Customers
    patch:
      consumes:
      - application/json
      description: Update user's basic profile info
      parameters:
      - description: Set access token here
        in: header
        name: authorization
        required: true
        type: string
      - description: Some fields are mandatory
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.CustomerProfileUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CustomerSuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Update basic profile
      tags:
      - Customers
  /api/v1/private/customers/refresh-token:
    get:
      consumes:
      - application/json
      description: Generate new access and refresh tokens using current refresh token
      parameters:
      - description: Value of refresh token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokenSuccessRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Refresh customer's access token
      tags:
      - Customers
  /api/v1/private/customers/verify-token:
    get:
      consumes:
      - application/json
      description: VerifyAccessToken lets apps to verify that a provided token is
        in-fact valid
      parameters:
      - description: Value of access token
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.EmptySuccessRes'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Verify customer's access token
      tags:
      - Customers
  /api/v1/public/customers/login:
    post:
      consumes:
      - application/json
      description: Login uses user defined username and password to authenticate a
        user.
      parameters:
      - description: All fields are mandatory
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokenSuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Login as a customer
      tags:
      - Customers
  /api/v1/public/customers/signup:
    post:
      consumes:
      - application/json
      description: Signup a new customer for a valid non-existing phone number
      parameters:
      - description: All fields are mandatory
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.CustomerSignupReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.EmptySuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: Signup a new customer
      tags:
      - Customers
  /api/v1/public/customers/verify-signup:
    post:
      consumes:
      - application/json
      description: VerifySignUp uses user defined otp and matches it with existing
        reference in cache to verify a signup
      parameters:
      - description: All fields are mandatory
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/model.CustomerSignupVerificationReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.EmptySuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.CustomerErrorRes'
      summary: VerifyAccessToken a new customer using otp
      tags:
      - Customers
swagger: "2.0"
